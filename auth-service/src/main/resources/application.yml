server:
  port: 8081

spring:
  application:
    name: auth-service
  
  datasource:
    url: jdbc:mysql://localhost:3306/microservices_db
    username: microuser
    password: micropass
    driver-class-name: com.mysql.cj.jdbc.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
  access-token-expiration: 86400000  # 24 hours in milliseconds
  refresh-token-expiration: 604800000 # 7 days in milliseconds

# CORS Configuration
cors:
  allowed-origins: 
    - http://localhost:3000
    - http://localhost:8080
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed-headers:
    - "*"
  allow-credentials: true

# Eureka Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: false
    fetch-registry: false
  instance:
    prefer-ip-address: true

app:
  kafka:
    topic:
      user-registered: user-registered

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    tags-sorter: alpha
    operations-sorter: alpha
  show-actuator: true

logging:
  level:
    com.microservices.auth: DEBUG
    org.springframework.kafka: INFO

---
# Docker profile
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:mysql://mysql:3306/microservices_db
  data:
    redis:
      host: redis

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/ 